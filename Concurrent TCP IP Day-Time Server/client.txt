#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netdb.h>
#include<netinet/in.h>
#include<unistd.h>
#include<time.h>
int main(int argc,char *argv[])
{
	int sd,ad;
	char buff[1024];
	struct sockaddr_in cliaddr,servaddr;
	struct hostent *h;
	h=gethostbyname(argv[1]);
	bzero(&servaddr,sizeof(servaddr));

	           /*Socket address structure*/ 
	servaddr.sin_family=AF_INET;
	memcpy((char*)&servaddr.sin_addr.s_addr,h->h_addr_list[0],h->h_length);
	servaddr.sin_port=htons(1507);

	             /*TCP socket is created, an Internet socket address structure is filled with                 
		      *             wildcard address & serverâ€™s well  known port*/   
	sd=socket(AF_INET,SOCK_STREAM,0);

	            /*Connect establishes connection with the server using server IP address*/
		connect(sd,(struct sockaddr*)&servaddr,sizeof(servaddr));
		recv(sd,buff,sizeof(buff),0);
		printf("Day time of server is: %s\n",buff);
}

OR

#include <stdio.h> 
#include <stdlib.h> 
#include <sys/types.h> 
#include <sys/socket.h> 
#include <netinet/in.h> 
#include <unistd.h> 
#include <time.h> 
int main(int argc, char **argv){ 
if(argc != 2){ 
printf("Usage: %s <port>\n", argv[0]); 
exit(0); 
} 
int port = atoi(argv[1]); 
printf("Port: %d\n", port); 
int sockfd = socket(AF_INET, SOCK_STREAM, 0); 
char response[30]; 
struct sockaddr_in serverAddress; 
serverAddress.sin_family = AF_INET; 
serverAddress.sin_addr.s_addr = INADDR_ANY; 
serverAddress.sin_port = htons(port); 
connect(sockfd, (struct sockaddr*)&serverAddress, sizeof(serverAddress)); printf("[+]Connected to the server\n");
recv(sockfd, response, 29, 0); 
printf("Time from server: %s", response); 
return 0; 
}