#include<time.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<unistd.h>
#include<stdio.h>
#include<string.h>
#include<netinet/in.h>
#include<netdb.h>
int main(int argc,char*argv[])
{
	int sd,ad;
	char buff[1024];
	struct sockaddr_in servaddr,cliaddr;
	socklen_t clilen=sizeof(cliaddr);
	time_t t1;
	bzero(&servaddr,sizeof(servaddr));
            /*Socket address structure*/ 
	            	servaddr.sin_family=AF_INET;
            	servaddr.sin_addr.s_addr=htonl(INADDR_ANY);
	          	servaddr.sin_port=htons(1507);
	            	 /*TCP socket is created, an Internet socket address structure is filled wildcard address & server’s well known port*/   
			sd=socket(AF_INET,SOCK_STREAM,0);
	
	           	 	 /*Bind function assigns a local protocol address to the socket*/
	            	 	 bind(sd,(struct sockaddr*)&servaddr,sizeof(servaddr));
	
	            	 	 	/*Listen function specifies the maximum number of connections that kernel 	should queue for this socket*/
	            	 	 	listen(sd,5);
	            	 	 	printf("Server is running…\n");
	            	 	 	             /*The server to return the next completed connection from the front of the 
            	 	 	                          completed connection Queue calls it*/
	            	 	 	                            ad=accept(sd,(struct sockaddr *)NULL,NULL);
	            	 	 	                              while(1)
	            	 	 	                                {
	            	 	 	                                  	 bzero(&buff,sizeof(buff));
	            	 	 	                                  	  
	            	 	 	                                  	  		/*Library function time returns the Coordinated Universal Time*/ 	        	      	t1=time(NULL); 
	       	 	 	                                  	  				/*Prints the converted string format*/ 			        				snprintf(buff,sizeof(buff),"%24s\r\n",ctime(&t1));
	                                 send(ad,buff,sizeof(buff),0);      	 	 	                                  	  				      	    }   
}


#include <stdio.h> 
#include <stdlib.h> 
#include <sys/types.h> 
#include <sys/socket.h> 
#include <netinet/in.h> 
#include <unistd.h> 
#include <time.h> 
#define BACKLOG 10 
int main(int argc, char **argv){ 
if(argc != 2){ 
printf("Usage: %s <port>\n", argv[0]); 
exit(0); 
} 
int port = atoi(argv[1]); 
printf("Port: %d\n", port); 
int n_client = 0; 
int sockfd = socket(AF_INET, SOCK_STREAM, 0); 
struct sockaddr_in serverAddress; 
serverAddress.sin_family = AF_INET; 
serverAddress.sin_addr.s_addr = INADDR_ANY; 
serverAddress.sin_port = htons(port); 
bind(sockfd, (struct sockaddr*)&serverAddress, sizeof(serverAddress)); printf("[+]Bind\n"); 
listen(sockfd, BACKLOG); 
printf("[+]Listening for the client\n");
int i = 1; 
while(i){ 
int client_socket = accept(sockfd, NULL, NULL); 
n_client++; 
time_t currentTime; 
time(&currentTime); 
printf("Client %d requested for time at %s", n_client, ctime(&currentTime)); send(client_socket, ctime(&currentTime), 30, 0); 
} 
return 0; 
}
